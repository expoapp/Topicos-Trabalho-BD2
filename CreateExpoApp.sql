/* eventosAppLogico: */

CREATE TABLE EMPRESA (
    nome VARCHAR,
    cnpj VARCHAR,
    dt_cadastro TIMESTAMP,
    sobre VARCHAR,
    logradouro VARCHAR,
    cep VARCHAR,
    ID SERIAL PRIMARY KEY,
    FK_BAIRRO_id INTEGER
) INHERITS (USUARIO);

CREATE TABLE PECA (
    autor VARCHAR,
    nome VARCHAR,
    ID SERIAL PRIMARY KEY,
    dt_criacao DATE,
    sobre VARCHAR,
    FK_EXPOSICAO_id INTEGER
);

CREATE TABLE IMAGEM (
    ID SERIAL PRIMARY KEY,
    link_imagem VARCHAR,
    tipo INTEGER,
    FK_EMPRESA_id INTEGER,
    FK_PECA_id INTEGER
);

CREATE TABLE USUARIO (
    login VARCHAR,
    email VARCHAR,
    senha VARCHAR,
    tipo INTEGER,
    ID SERIAL PRIMARY KEY,
    dt_cadastro TIMESTAMP
);

CREATE TABLE NOTIFICACAO (
    data TIMESTAMP,
    descricao VARCHAR,
    id SERIAL PRIMARY KEY,
    tipo INTEGER,
    id_origem INTEGER
);

CREATE TABLE EXPOSICAO (
    id SERIAL PRIMARY KEY,
    tipo INTEGER,
    descricao VARCHAR,
    dt_inicio DATE,
    Hr_inicio TIME,
    Hr_final TIME,
    logradouro VARCHAR,
    FK_EMPRESA_id INTEGER,
    fk_bairro_id INTEGER
);

CREATE TABLE EXPOSICAO_TEMP (
    dt_fim DATE,
    id SERIAL PRIMARY KEY
) INHERITS (EXPOSICAO);

CREATE TABLE CLIENTE (
    data_nascimento DATE,
    sexo CHAR,
    cpf VARCHAR,
    endereco VARCHAR,
    ID SERIAL PRIMARY KEY,
    logradouro VARCHAR,
    nome VARCHAR,
    Fk_bairiro_id INTEGER
) INHERITS (USUARIO);

CREATE TABLE BAIRRO (
    ID SERIAL PRIMARY KEY,
    nome VARCHAR,
    FK_CIDADE_id INTEGER
);

CREATE TABLE CIDADE (
    ID SERIAL PRIMARY KEY,
    nome VARCHAR,
    FK_ESTADO_id INTEGER
);

CREATE TABLE ESTADO (
    ID SERIAL PRIMARY KEY,
    nome VARCHAR
);

CREATE TABLE Comentario (
    ID SERIAL PRIMARY KEY,
    descricao VARCHAR,
    data_cadastro TIMESTAMP,
    nota INTEGER,
    tipo INTEGER,
    FK_CLIENTE_id INTEGER
);

CREATE TABLE Resposta (
    FK_Comentario_id_origem INTEGER,
    FK_Comentario_id_destino INTEGER,
    Curtida BOOLEAN,
    Descricao VARCHAR
);

CREATE TABLE Cliente_Notificacao (
    FK_CLIENTE_id INTEGER,
    FK_NOTIFICACAO_id INTEGER
);

CREATE TABLE Cliente_Empresa (
    FK_CLIENTE_id INTEGER,
    FK_EMPRESA_id INTEGER
);
 
ALTER TABLE EMPRESA ADD CONSTRAINT FK_EMPRESA_1
    FOREIGN KEY (FK_BAIRRO_id)
    REFERENCES BAIRRO (id)
    ON DELETE RESTRICT ON UPDATE RESTRICT;
 
ALTER TABLE PECA ADD CONSTRAINT FK_PECA_1
    FOREIGN KEY (FK_EXPOSICAO_id)
    REFERENCES EXPOSICAO (id)
    ON DELETE CASCADE ON UPDATE CASCADE;
 
ALTER TABLE IMAGEM ADD CONSTRAINT FK_IMAGEM_1
    FOREIGN KEY (FK_EMPRESA_id, FK_EMPRESA_FK_USUARIO_id???)
    REFERENCES EMPRESA (id, ???)
    ON DELETE CASCADE ON UPDATE CASCADE;
 
ALTER TABLE IMAGEM ADD CONSTRAINT FK_IMAGEM_2
    FOREIGN KEY (FK_PECA_id)
    REFERENCES PECA (id)
    ON DELETE CASCADE ON UPDATE CASCADE;
 
ALTER TABLE EXPOSICAO ADD CONSTRAINT FK_EXPOSICAO_1
    FOREIGN KEY (fk_bairro_id)
    REFERENCES BAIRRO (id);
 
ALTER TABLE EXPOSICAO ADD CONSTRAINT FK_EXPOSICAO_2
    FOREIGN KEY (FK_EMPRESA_id)
    REFERENCES EMPRESA (id);
 
ALTER TABLE CLIENTE ADD CONSTRAINT FK_CLIENTE_1
    FOREIGN KEY (Fk_bairiro_id)
    REFERENCES BAIRRO (id);
 
ALTER TABLE BAIRRO ADD CONSTRAINT FK_BAIRRO_1
    FOREIGN KEY (FK_CIDADE_id)
    REFERENCES CIDADE (id)
    ON DELETE RESTRICT ON UPDATE RESTRICT;
 
ALTER TABLE CIDADE ADD CONSTRAINT FK_CIDADE_1
    FOREIGN KEY (FK_ESTADO_id)
    REFERENCES ESTADO (id)
    ON DELETE RESTRICT ON UPDATE RESTRICT;
 
ALTER TABLE Comentario ADD CONSTRAINT FK_Comentario_1
    FOREIGN KEY (FK_CLIENTE_id)
    REFERENCES CLIENTE (id);
 
ALTER TABLE Resposta ADD CONSTRAINT FK_Resposta_0
    FOREIGN KEY (FK_Comentario_id_origem)
    REFERENCES Comentario (id)
    ON DELETE CASCADE ON UPDATE CASCADE;
 
ALTER TABLE Resposta ADD CONSTRAINT FK_Resposta_1
    FOREIGN KEY (FK_Comentario_id_destino)
    REFERENCES Comentario (id)
    ON DELETE CASCADE ON UPDATE CASCADE;
 
ALTER TABLE Cliente_Notificacao ADD CONSTRAINT FK_Cliente_Notificacao_0
    FOREIGN KEY (FK_CLIENTE_id)
    REFERENCES CLIENTE (id);
 
ALTER TABLE Cliente_Notificacao ADD CONSTRAINT FK_Cliente_Notificacao_1
    FOREIGN KEY (FK_NOTIFICACAO_id)
    REFERENCES NOTIFICACAO (id);
 
ALTER TABLE Cliente_Empresa ADD CONSTRAINT FK_Cliente_Empresa_0
    FOREIGN KEY (FK_CLIENTE_id)
    REFERENCES CLIENTE (id);
 
ALTER TABLE Cliente_Empresa ADD CONSTRAINT FK_Cliente_Empresa_1
    FOREIGN KEY (FK_EMPRESA_id)
    REFERENCES EMPRESA (id);